# Importing the libraries
import numpy as np
import matplotlib.pyplot as plt
import matplotlib.image as mpimg
import pandas as pd
from sklearn import datasets
from sklearn import metrics

#Uploading dataset
dataset = pd.read_csv('Credit.csv')
X= dataset.iloc[:,:-1].values
y= dataset.iloc[:,24].values

# Splitting the dataset into the Training set and Test set
from sklearn.model_selection import train_test_split
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size = 0.25, random_state = 82)

# Feature Scaling to bring the variable in a single scale
from sklearn.preprocessing import StandardScaler
sc = StandardScaler()
X_train = sc.fit_transform(X_train)
X_test = sc.transform(X_test)

#Applying K-Fold cross validation
from sklearn.model_selection import cross_val_score
accuracies=cross_val_score(estimator=svm, X=X_train,y=y_train,cv=10,gamma=auto)
accuracies.mean()
accuracies.std() 

#Applying grid search to find the best model and the best parameters
from sklearn.model_selection import GridSearchCV
parameters= [{'C':[1,10,100,1000], 'kernel': ['linear']},
              {'C':[1,10,100,1000], 'kernel': ['rbf'], 'gamma': [0.5, 0.1 ,0.001 ,0.0001]}
              ]
grid_search= GridSearchCV(estimator=svm,
                          param_grid=parameters,
                          scoring='accuracy',
                          cv=10,
                          n_jobs=-1)
grid_search= grid_search.fit(X_train,y_train)
best_accuracy = grid_search.best_score_
best_parameters=grid_search.best_params_
